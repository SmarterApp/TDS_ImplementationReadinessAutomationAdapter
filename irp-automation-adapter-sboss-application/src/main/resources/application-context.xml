<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:irp-adapter.properties" />

    <bean class="com.fasterxml.jackson.module.jaxb.JaxbAnnotationModule" />

    <bean id="sbossAutomationAdapterService" class="org.cresst.sb.irp.automation.adapter.service.SbossAutomationAdapterService">
        <constructor-arg name="automationEngine" ref="irpAutomationEngine" />
    </bean>

    <bean id="adapterController" class="org.cresst.sb.irp.automation.adapter.web.AdapterController">
        <constructor-arg name="adapterAutomationService" ref="sbossAutomationAdapterService" />
    </bean>

    <bean id="irpAutomationTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="${adapter.automation.corepoolsize}" />
        <property name="maxPoolSize" value="${adapter.automation.maxpoolsize}" />
        <property name="queueCapacity" value="${adapter.automation.queuecapacity}" />
    </bean>

    <bean id="irpAutomationEngine" class="org.cresst.sb.irp.automation.adapter.engine.SbossAutomationEngine">
        <constructor-arg name="taskExecutor" ref="irpAutomationTaskExecutor" />
        <lookup-method name="createAutomationTaskRunner" bean="automationTaskRunner" />
    </bean>

    <bean id="automationTaskRunner" class="org.cresst.sb.irp.automation.adapter.engine.task.AutomationTaskRunner"
          scope="prototype" lazy-init="true">
        <constructor-arg name="automationInitializer" ref="automationInitializer" />
        <constructor-arg name="automationPreloader" ref="automationPreloader" />
        <constructor-arg name="automationTestSimulator" ref="automationTestSimulator" />
        <constructor-arg name="documentXmlRepository" ref="documentXmlRepository" />
    </bean>

    <bean id="automationInitializer" class="org.cresst.sb.irp.automation.adapter.engine.task.subtask.SbossAutomationInitializer"
          scope="prototype" lazy-init="true">
        <constructor-arg name="automationProperties" ref="automationProperties" />
        <constructor-arg name="automationRestTemplate" ref="automationRestTemplate" />
    </bean>

    <bean id="automationPreloader" class="org.cresst.sb.irp.automation.adapter.engine.task.subtask.SbossAutomationPreloader"
          scope="prototype" lazy-init="true">
        <constructor-arg name="automationProperties" ref="automationProperties" />
        <constructor-arg name="adapterResources" ref="adapterResources" />
        <constructor-arg name="automationRestTemplate" ref="automationRestTemplate" />
    </bean>

    <bean id="automationTestSimulator" class="org.cresst.sb.irp.automation.adapter.engine.task.subtask.SbossAutomationTestSimulator"
          scope="prototype" lazy-init="true">
        <constructor-arg name="proctorController" ref="proctorController" />
        <constructor-arg name="studentController" ref="studentController" />
    </bean>
    
     <bean id="documentXmlRepository" class="org.cresst.sb.irp.automation.adapter.dao.DocumentXmlRepositoryImpl"
          scope="prototype" lazy-init="true">
        <constructor-arg name="dataSourceSqlServer" ref="dataSourceSqlServer" />         
    </bean>

    <bean id="proctorController" class="org.cresst.sb.irp.automation.adapter.engine.task.subtask.simulation.SbossProctorController"
          scope="prototype" lazy-init="true">
        <constructor-arg name="proctor" ref="proctor" />
    </bean>

    <bean id="studentController" class="org.cresst.sb.irp.automation.adapter.engine.task.subtask.simulation.SbossStudentController"
          scope="prototype" lazy-init="true">
        <constructor-arg name="students" value="#{studentFactory.createStudents()}" />
    </bean>

    <bean id="proctor" class="org.cresst.sb.irp.automation.adapter.proctor.SbossProctor"
          scope="prototype" lazy-init="true">
        <constructor-arg name="proctorRestTemplate" ref="proctorRestTemplate" />
        <constructor-arg name="retryTemplate" ref="retryTemplate" />
        <constructor-arg name="proctorUrl" value="#{automationProperties.proctorUrl}" />
        <constructor-arg name="proctorUserId" value="#{automationProperties.proctorUserId}" />
    </bean>

    <bean id="studentFactory" class="org.cresst.sb.irp.automation.adapter.student.SbossStudentFactory"
          init-method="postContruct">
        <constructor-arg name="studentUrl" value="#{automationProperties.studentUrl}" />
        <constructor-arg name="studentResponseGenerator" ref="studentResponseGenerator" />
        <constructor-arg name="retryTemplate" ref="retryTemplate" />
        <constructor-arg name="testStudentMappingsFile" value="#{adapterResources.testStudentMappingsPath}" />
        <lookup-method name="createStudentRestTemplate" bean="studentRestTemplate"/>
    </bean>

    <bean id="studentResponseGenerator" class="org.cresst.sb.irp.automation.adapter.student.StudentResponseGenerator">
        <constructor-arg name="studentResponses" value="classpath:IRPv2_generated_item_responses.txt"/>
    </bean>

    <bean id="adapterResources" class="org.cresst.sb.irp.automation.adapter.configuration.AdapterResources">
        <property name="registrationTestPackageDirectory" value="classpath:irp-package/TestPackages/ART/Registration"/>
        <property name="studentAccommodationsTemplatePath" value="classpath:irp-package/IRPStudentsDesignatedSupportsAndAccommodations_template.csv"/>
        <property name="studentGroupTemplatePath" value="classpath:irp-package/IRPStudentGroup_template.csv" />
        <property name="studentTemplatePath" value="classpath:irp-package/IRPStudents_template.csv"/>
        <property name="explicitEligibilityTemplatePath" value="classpath:irp-package/IRPExplicitEligibility_template.csv"/>
        <property name="testStudentMappingsPath" value="classpath:irp-package/IRPTestStudentMapping.csv"/>
    </bean>

    <bean id="automationProperties" class="org.cresst.sb.irp.automation.adapter.configuration.AutomationProperties">
        <property name="artPassword" value="${adapter.automation.artPassword}" />
        <property name="artUrl" value="${adapter.automation.artUrl}" />
        <property name="artUserId" value="${adapter.automation.artUserId}" />
        <property name="district" value="${adapter.automation.district}" />
        <property name="institution" value="${adapter.automation.institution}" />
        <property name="oAuthUrl" value="${adapter.automation.oAuthUrl}" />
        <property name="proctorPassword" value="${adapter.automation.proctorPassword}" />
        <property name="proctorUrl" value="${adapter.automation.proctorUrl}" />
        <property name="studentUrl" value="${adapter.automation.studentUrl}" />
        <property name="proctorUserId" value="${adapter.automation.proctorUserId}" />
        <property name="programManagementClientId" value="${adapter.automation.programManagementClientId}" />
        <property name="programManagementClientSecret" value="${adapter.automation.programManagementClientSecret}" />
        <property name="programManagementUrl" value="${adapter.automation.programManagementUrl}" />
        <property name="programManagementUserId" value="${adapter.automation.programManagementUserId}" />
        <property name="programManagementUserPassword" value="${adapter.automation.programManagementUserPassword}" />
        <property name="stateAbbreviation" value="${adapter.automation.stateAbbreviation}" />
        <property name="tenantName" value="${adapter.automation.tenantName}" />
	    <property name="testSpecBankPassword" value="${adapter.automation.testSpecBankPassword}" />
		<property name="testSpecBankUrl" value="${adapter.automation.testSpecBankUrl}" />
		<property name="testSpecBankUserId" value="${adapter.automation.testSpecBankUserId}" />
		<property name="tisDbUrl" value="${adapter.automation.tisDbUrl}" />
		<property name="tisDbUsername" value="${adapter.automation.tisDbUsername}" />
		<property name="tisDbPassword" value="${adapter.automation.tisDbPassword}" />
		
    </bean>

    <bean id="accessTokenRestTemplate" class="org.cresst.sb.irp.automation.adapter.web.SbossAutomationRestTemplate"
          scope="prototype" lazy-init="true" />
    <bean id="automationRestTemplate" class="org.cresst.sb.irp.automation.adapter.web.SbossAutomationRestTemplate"
          scope="prototype" lazy-init="true">
        <constructor-arg name="accessToken" ref="automationAccessToken" />
    </bean>
    <bean id="proctorRestTemplate" class="org.cresst.sb.irp.automation.adapter.web.SbossAutomationRestTemplate"
          scope="prototype" lazy-init="true">
        <constructor-arg name="accessToken" ref="proctorAccessToken" />
    </bean>
    <bean id="studentRestTemplate" class="org.cresst.sb.irp.automation.adapter.web.SbossAutomationRestTemplate"
          scope="prototype" lazy-init="true" />

    <bean id="automationAccessToken" class="org.cresst.sb.irp.automation.adapter.accesstoken.AccessToken"
          factory-method="buildAccessToken" scope="prototype" lazy-init="true">
        <constructor-arg name="accessTokenRestTemplate" ref="accessTokenRestTemplate" />
        <constructor-arg name="oamUrl" value="#{automationProperties.oAuthUrl}" />
        <constructor-arg name="clientId" value="#{automationProperties.programManagementClientId}" />
        <constructor-arg name="clientSecret" value="#{automationProperties.programManagementClientSecret}" />
        <constructor-arg name="username" value="#{automationProperties.programManagementUserId}" />
        <constructor-arg name="password" value="#{automationProperties.programManagementUserPassword}" />
    </bean>

    <bean id="proctorAccessToken" class="org.cresst.sb.irp.automation.adapter.accesstoken.AccessToken"
          factory-method="buildAccessToken" scope="prototype" lazy-init="true">
        <constructor-arg name="accessTokenRestTemplate" ref="accessTokenRestTemplate" />
        <constructor-arg name="oamUrl" value="#{automationProperties.oAuthUrl}" />
        <constructor-arg name="clientId" value="#{automationProperties.programManagementClientId}" />
        <constructor-arg name="clientSecret" value="#{automationProperties.programManagementClientSecret}" />
        <constructor-arg name="username" value="#{automationProperties.proctorUserId}" />
        <constructor-arg name="password" value="#{automationProperties.proctorPassword}" />
    </bean>

    <bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="retryPolicy">
            <bean class="org.springframework.retry.policy.SimpleRetryPolicy" />
        </property>
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy" />
        </property>
    </bean>



	<bean id="dataSourceSqlServer"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
		<property name="url" value="#{automationProperties.tisDbUrl}" />
		<property name="username" value="#{automationProperties.tisDbUsername}" />
		<property name="password" value="#{automationProperties.tisDbPassword}" />
	</bean>
</beans>